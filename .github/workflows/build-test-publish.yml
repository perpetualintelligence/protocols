#    Copyright 2021 Perpetual Intelligence L.L.C. All Rights Reserved.
#
#    Licensed under the Apache License, Version 2.0.
#    https://github.com/perpetualintelligence/terms/blob/main/LICENSE
#
#    Additional terms and policies.
#    https://github.com/perpetualintelligence/terms/blob/main/policies.md

# This pipelinebuilds, tests and packs the protocol src projects. It does not publish any package.

name: build-test-publish

# 1 deployment at a time
# https://docs.github.com/en/actions/deployment/about-deployments/deploying-with-github-actions

# Manual trigger for deployment
on:
  workflow_dispatch:
    inputs:
      suffix:
        type: choice
        description: 'The package deployment suffix'
        required: true
        options:
        - preview
        - rc
        - release
        default: preview
      registry:
        type: choice
        description: 'The package registry'
        required: true
        options:
        - github
        - nuget        
        default: github
        
jobs:
  setup:    
    runs-on: windows-latest
    #environment: release
    
    # Define environment variables to authenticate the package feeds
    env:
      PI_GITHUB_USERNAME_ENV: ${{ secrets.PI_GITHUB_USERNAME }}
      PI_GITHUB_PAT_ENV: ${{ secrets.PI_GITHUB_PAT }}
      PI_NUGET_PAT_ENV: ${{ secrets.PI_NUGET_API_KEY }}

    steps:
    - uses: actions/checkout@v2

    # Setup build metadata
    # Establish a unique build number for current run YYMMDD{RUN_NUMBER}{RUN_ATTEMPT} e.g. 2201032602
    - name: Build metadata
      run: |
        cat .github/package_version.env >> $GITHUB_ENV        
        echo "PI_BUILD_NUMBER=$(date +'%y%m%d')${{ github.run_number }}${{ github.run_attempt }}" >> $GITHUB_ENV
      continue-on-error: false
      
    # Setup preview package versions
    # Format: <package>.2.3.6-preview.2201032602
    - name: Preview metadata
      if: ${{ github.event.inputs.suffix == 'preview' }}
      run: echo "PI_PACKAGE_VERSION=${{ env.PI_MAJOR_VERSION }}.${{ env.PI_MINOR_VERSION }}.${{ env.PI_BUILD_VERSION }}-preview.${{ env.PI_BUILD_NUMBER }}" >> $GITHUB_ENV
      continue-on-error: false
      
    # Setup rc package versions
    # Format: <package>.2.3.6-rc.2201032602
    - name: RC metadata
      if: ${{ github.event.inputs.suffix == 'rc' }}
      run: echo "PI_PACKAGE_VERSION=${{ env.PI_MAJOR_VERSION }}.${{ env.PI_MINOR_VERSION }}.${{ env.PI_BUILD_VERSION }}-rc.${{ env.PI_BUILD_NUMBER }}" >> $GITHUB_ENV
      continue-on-error: false
      
    # Setup release package versions
    # Format: <package>.2.3.6
    - name: Release metadata
      if: ${{ github.event.inputs.suffix == 'release' }}
      run: echo "PI_PACKAGE_VERSION=${{ env.PI_MAJOR_VERSION }}.${{ env.PI_MINOR_VERSION }}.${{ env.PI_BUILD_VERSION }}" >> $GITHUB_ENV
      continue-on-error: false
    
    # Print all env
    - name: Print
      if: ${{ true }}  # Debug
      run: |
        echo 'Print environment variables'
        env
        echo 'Print directory structure'
        echo dir /s
    
    # Setup .Net with global.json
    - name: Setup .NET
      uses: actions/setup-dotnet@v1

  shared:
    needs: setup
    runs-on: windows-latest

    steps:
      
      # Build
      - name: Build
        run: dotnet build src/PerpetualIntelligence.Shared/PerpetualIntelligence.Shared.csproj -c Release
      
      # Test
      - name: Test
        run: dotnet test test/PerpetualIntelligence.Shared/PerpetualIntelligence.Shared.Test.csproj -c Release --verbosity normal    

      # Pack
      - name: Pack
        run: |
          echo branch=${{ github.ref_name }} version=${{ env.PI_PACKAGE_VERSION }}
          dotnet pack src/PerpetualIntelligence.Shared/PerpetualIntelligence.Shared.csproj -p:PackageVersion=${{ env.PI_PACKAGE_VERSION }} --no-build -o _packages -v minimal
      
      # Enumerate
      - name: Enumerate
        run : |
          echo dir
        working-directory: _packages
      
      # Github Push
      - name: Github Push
        if: ${{ github.event.inputs.registry == 'github' }}
        run: dotnet nuget push "_packages/PerpetualIntelligence.Shared.${{ env.PI_PACKAGE_VERSION }}.nupkg" --skip-duplicate --no-symbols --api-key ${{ env.PI_GITHUB_PAT_ENV }} --source "github"
    
      # Nuget Push
      - name: Nuget Push
        if: ${{ github.event.inputs.registry == 'nuget' }}
        run: dotnet nuget push "*.nupkg" --skip-duplicate --no-symbols --api-key ${{ env.PI_NUGET_PAT_ENV }} --source "nuget.org"
        working-directory: _packages
