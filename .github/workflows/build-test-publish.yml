#    Copyright 2021 Perpetual Intelligence L.L.C. All Rights Reserved.
#
#    Licensed under the Apache License, Version 2.0.
#    https://github.com/perpetualintelligence/terms/blob/main/LICENSE
#
#    Additional terms and policies.
#    https://github.com/perpetualintelligence/terms/blob/main/policies.md

# Builds, tests and publishes the packages to GitHub registry.

name: build-test-publish

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
  
    # OS/Platform
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    # Setup Environment
    - name: Setup environment
      run: |
        cat .github/package_version.env >> $GITHUB_ENV
        echo "PI_BUILD_NUMBER=$(date + "%m%d%Y").${{ env.GITHUB_RUN_NUMBER }}" >> $GITHUB_ENV
      continue-on-error: false
      
    # Setup versions
    # https://docs.github.com/en/actions/learn-github-actions/workflow-commands-for-github-actions#setting-an-environment-variable
    # Make sure we do it in a next step so package_version.env are available.
    - name: Setup environment
      run: |
        echo "PI_PACKAGE_VERSION=${{ env.PI_MAJOR_VERSION }}.${{ env.PI_MAJOR_VERSION }}.${{ env.PI_BUILD_VERSION }}" >> $GITHUB_ENV
        echo "PI_PREVIEW_SUFFIX=preview.${{ env.PI_BUILD_NUMBER }}" >> $GITHUB_ENV
        echo "PI_RC_SUFFIX=rc.${{ env.PI_BUILD_NUMBER }}" >> $GITHUB_ENV
        
      continue-on-error: false
    
    # Print all env
    - name: Print Environement
      run: env
    
    # Setup .Net with global.json
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      
    # Restore dependencies
    - name: Restore dependencies
      run: dotnet restore
      
    # Build
    - name: Build
      run: dotnet build --no-restore
      
    # Test
    - name: Test
      if: ${{ false }}  # disable for now
      run: dotnet test --no-build --verbosity normal
    
    # --- Pack based on cadence --- #
    # Update the arguments consitently for all cadence configuration
    
    # Pack Preview
    - name: Pack Preview
      if: github.ref_name == 'preview'
      run: |
        echo branch="${{ env.GITHUB_REF_NAME }}" version="${{ env.PI_PACKAGE_VERSION }}" version-suffix="${{ env.PI_PREVIEW_SUFFIX }}"
        dotnet pack -p:PackageVersion="${{ env.PI_PACKAGE_VERSION }}" --version-suffix ${{ env.PI_PREVIEW_SUFFIX }} -c Release --nologo --no-restore -o _packages -v m" 
    
    # Pack Rc
    - name: Pack RC
      if: github.ref_name == 'rc'
      run: |
        echo branch="${{ env.GITHUB_REF_NAME }}" version="${{ env.PI_PACKAGE_VERSION }}" version-suffix="${{ env.PI_RC_SUFFIX }}"
        dotnet pack -p:PackageVersion="${{ env.PI_PACKAGE_VERSION }}" --version-suffix ${{ env.PI_RC_SUFFIX }} -c Release --nologo --no-restore -o _packages -v m" 
        
     # Pack Release
    - name: Pack Release
      if: github.ref_name == 'main'
      run: |
        echo "branch=${{ env.GITHUB_REF_NAME }} version=${{ env.PI_PACKAGE_VERSION }}"
        dotnet pack -p:PackageVersion=${{ env.PI_PACKAGE_VERSION }} -c Release --nologo --no-restore -o _packages -v m
    
    # Enumerate
    - name: Enumerate
      run : ls -l
      working-directory: _packages
